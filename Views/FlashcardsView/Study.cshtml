@model flashcardApp.Models.FlashcardSet
@{
    ViewData["Title"] = "Study: " + Model.Title;
}

<div class="container mt-4">
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-4">
        <div>
            <h1 class="mb-2">@Model.Title</h1>
            <p class="text-muted">
                <i class="bi bi-journal-text me-2"></i>Çalışma Modu
                <span class="ms-2 badge rounded-pill" style="background-color: var(--primary-light); color: var(--primary-dark)">
                    @Model.Flashcards.Count kart
                </span>
            </p>
        </div>
        <div class="mt-3 mt-md-0">
            <a asp-action="Set" asp-route-id="@Model.Id" class="btn btn-outline-primary-modern">
                <i class="bi bi-arrow-left me-2"></i>Sete geri dön
            </a>
        </div>
    </div>

    @if (!Model.Flashcards.Any())
    {
        <div class="alert alert-warning rounded-xl p-4 text-center">
            <i class="bi bi-exclamation-triangle fs-1 mb-3 d-block"></i>
            <h5>Bu set henüz hiç kart içermiyor.</h5>
            @if (User.Identity.IsAuthenticated && int.TryParse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value, out int userId) && userId == Model.UserId)
            {
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary-modern mt-3">
                    <i class="bi bi-plus-circle me-2"></i>Hemen ekle!
                </a>
            }
            else
            {
                <span class="d-block mt-2">Daha sonra tekrar deneyiniz.</span>
            }
        </div>
    }
    else
    {
        <div class="study-mode-container mb-5">
            <!-- Progress bar -->
            <div class="progress-container mb-4">
                <div class="progress-bar" id="studyProgress" style="width: 0%"></div>
            </div>
            
            <!-- Study controls -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <span class="badge bg-light text-dark p-2">
                        <i class="bi bi-card-text me-1"></i>
                        Kart <span id="currentCardIndex" class="fw-bold">1</span> / <span id="totalCards">@Model.Flashcards.Count</span>
                    </span>
                </div>
                <div class="d-flex">
                    <div class="dropdown me-2">
                        <button class="btn btn-outline-primary-modern dropdown-toggle" type="button" id="studyOptionsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-gear"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="studyOptionsDropdown">
                            <li>
                                <button id="shuffleBtn" class="dropdown-item">
                                    <i class="bi bi-shuffle me-2"></i>Karıştır
                                </button>
                            </li>
                            <li>
                                <button id="resetBtn" class="dropdown-item">
                                    <i class="bi bi-arrow-repeat me-2"></i>Baştan Başla
                                </button>
                            </li>
                        </ul>
                    </div>
                    <button id="autoplayBtn" class="btn btn-outline-success">
                        <i class="bi bi-play-fill"></i>
                    </button>
                </div>
            </div>
            
            <!-- Flashcard -->
            <div class="flashcard-container">
                <div class="flashcard large-flashcard" id="flashcard">
                    <!-- Card front with term -->
                    <div id="cardFront" class="flashcard-front d-flex flex-column">
                        <div class="term-container mb-3">
                            <h3 id="termText" class="mb-0"></h3>
                        </div>
                        <div id="imageContainer" class="image-section d-none">
                            <img id="cardImage" class="img-fluid rounded">
                        </div>
                        <div class="mt-auto pt-3">
                            <span class="text-muted small">Tanımı görmek için kartı çevirin</span>
                        </div>
                    </div>
                    <!-- Card back with definition -->
                    <div id="cardBack" class="flashcard-back d-none d-flex flex-column justify-content-center">
                        <h4 class="mb-3">Tanım</h4>
                        <p id="definitionText" class="lead mb-4"></p>
                        <div id="exampleContainer" class="mt-3 p-3 border-start border-3 border-primary bg-light rounded d-none">
                            <p id="exampleText" class="mb-0 fst-italic"></p>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Navigation controls -->
            <div class="text-center mt-4">
                <div class="btn-group">
                    <button id="prevBtn" class="btn btn-outline-primary-modern" disabled>
                        <i class="bi bi-arrow-left me-1"></i> Önceki
                    </button>
                    <button id="flipBtn" class="btn btn-primary-modern px-4">
                        <i class="bi bi-arrow-repeat me-1"></i> Çevir
                    </button>
                    <button id="nextBtn" class="btn btn-outline-primary-modern">
                        Sonraki <i class="bi bi-arrow-right ms-1"></i>
                    </button>
                </div>
            </div>
            
            <!-- Keyboard shortcuts info -->
            <div class="text-center mt-4">
                <small class="text-muted">
                    Klavye kısayolları: <kbd>←</kbd> Önceki, <kbd>→</kbd> Sonraki, <kbd>Space</kbd> Çevir
                </small>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Initialize global flashcards array with clean JSON data
        window.flashcards = [
            @foreach(var card in Model.Flashcards)
            {
                @:{ 
                @:  id: @card.Id,
                @:  term: @Json.Serialize(card.Term),
                @:  definition: @Json.Serialize(card.Definition),
                @:  imageUrl: @Json.Serialize(card.ImageUrl),
                @:  exampleSentence: @Json.Serialize(card.ExampleSentence)
                @:},
            }
        ];
        
        console.log("Flashcards loaded:", window.flashcards);
    </script>
    <!-- Use only the modern study page handler -->
    <script src="~/js/modern-study-page.js"></script>
}
