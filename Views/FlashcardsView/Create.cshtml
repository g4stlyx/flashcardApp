@{
    ViewData["Title"] = "Yeni Set Oluştur";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Yeni Set Oluştur</h1>
        <a asp-action="Index" class="btn btn-outline-primary-modern">
            <i class="bi bi-arrow-left me-2"></i>Setlere Dön
        </a>
    </div>

    <div class="row">
        <div class="col-lg-8 mx-auto">
            <div class="card-modern p-0">
                <div class="card-body p-4">
                    <form id="createSetForm" class="form-modern">
                        <!-- Progress steps -->
                        <div class="mb-4">
                            <div class="position-relative mb-4">
                                <div class="progress" style="height: 3px;">
                                    <div class="progress-bar" role="progressbar" style="width: 100%;" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                            </div>
                        </div>

                        <div class="row g-4">
                            <div class="col-md-6">
                                <div class="form-floating mb-3">
                                    <input type="text" class="form-control" id="title" name="title" placeholder="Set Başlığı" required>
                                    <label for="title">Set Başlığı</label>
                                </div>
                                
                                <div class="form-floating mb-3">
                                    <textarea class="form-control" id="description" name="description" style="height: 120px;" placeholder="Açıklama"></textarea>
                                    <label for="description">Açıklama</label>
                                </div>
                                
                                <div class="mb-4">
                                    <label class="form-label">Görünürlük</label>
                                    <div class="d-flex flex-wrap gap-3">
                                        <div class="form-check visibility-option">
                                            <input class="form-check-input" type="radio" name="visibilityRadio" id="visibilityPublic" value="0" checked>
                                            <label class="form-check-label p-3 rounded-3 border d-flex flex-column align-items-center" for="visibilityPublic">
                                                <i class="bi bi-globe fs-3 mb-2 text-primary"></i>
                                                <span>Herkese Açık</span>
                                                <small class="text-muted">Herkes görebilir</small>
                                            </label>
                                        </div>
                                        <div class="form-check visibility-option">
                                            <input class="form-check-input" type="radio" name="visibilityRadio" id="visibilityFriends" value="1">
                                            <label class="form-check-label p-3 rounded-3 border d-flex flex-column align-items-center" for="visibilityFriends">
                                                <i class="bi bi-people fs-3 mb-2 text-info"></i>
                                                <span>Arkadaşlar</span>
                                                <small class="text-muted">Sadece arkadaşların</small>
                                            </label>
                                        </div>
                                        <div class="form-check visibility-option">
                                            <input class="form-check-input" type="radio" name="visibilityRadio" id="visibilityPrivate" value="2">
                                            <label class="form-check-label p-3 rounded-3 border d-flex flex-column align-items-center" for="visibilityPrivate">
                                                <i class="bi bi-lock fs-3 mb-2 text-secondary"></i>
                                                <span>Özel</span>
                                                <small class="text-muted">Sadece sen</small>
                                            </label>
                                        </div>
                                    </div>
                                    <select class="form-select d-none" id="visibility" name="visibility">
                                        <option value="0">Herkese Açık</option>
                                        <option value="1">Sadece arkadaşlarım</option>
                                        <option value="2">Özel (Sadece ben)</option>
                                    </select>
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <label for="coverImageUrl" class="form-label">Kapak Fotoğrafı URL (İsteğe Bağlı)</label>
                                    <div class="input-group mb-3">
                                        <span class="input-group-text"><i class="bi bi-image"></i></span>
                                        <input type="url" class="form-control" id="coverImageUrl" name="coverImageUrl" placeholder="https://example.com/image.jpg">
                                    </div>
                                </div>
                                
                                <div class="cover-image-preview text-center p-3 mb-3 rounded-3 border">
                                    <div id="coverPreviewPlaceholder">
                                        <i class="bi bi-card-image text-muted" style="font-size: 4rem;"></i>
                                        <p class="text-muted mt-2">Kapak fotoğrafı önizlemesi</p>
                                    </div>
                                    <img id="coverPreviewImage" class="img-fluid rounded d-none" alt="Kapak önizleme">
                                </div>
                            </div>
                        </div>
                        
                        <hr class="my-4">
                        
                        <div class="d-flex justify-content-between">
                            <button type="button" class="btn btn-outline-secondary" id="testAuthBtn">
                                <i class="bi bi-shield-check me-2"></i>Auth Test
                            </button>
                            <div>
                                <a asp-action="Index" class="btn btn-outline-secondary me-2">İptal Et</a>
                                <button type="submit" class="btn btn-primary-modern">
                                    <i class="bi bi-plus-circle me-2"></i>Set Oluştur
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Add modern form handler -->
    <script src="~/js/modern-form-handler.js"></script>
    <script>
        $(document).ready(function() {
            $('#createSetForm').submit(function(e) {
                e.preventDefault();
                // Get form data
                // Get visibility value as number (0, 1, 2)
                const visibilityValue = parseInt($('#visibility').val());
                
                // Create map of visibility values to string names as they appear in the database
                const visibilityMap = {
                    0: "public",    // Public
                    1: "friends",   // Friends
                    2: "private"    // Private
                };
                
                var setData = {
                    title: $('#title').val(),
                    description: $('#description').val(),
                    visibility: visibilityValue, // Keep as integer (0, 1, 2), the server will convert it
                    coverImageUrl: $('#coverImageUrl').val() || null
                };
            
                console.log('Selected visibility value:', visibilityValue);
                console.log('Maps to:', visibilityMap[visibilityValue]);
                console.log('Data being sent:', setData);
                // Get the JWT token from localStorage
                const token = localStorage.getItem('token');
                if (!token) {
                    alert('Kullanıcı doğrulaması için oturum açmanız gerekiyor.');
                    return;
                }
                
                // Log the data we're sending
                console.log('Sending data:', setData);
                
                // Submit via API
                $.ajax({
                    url: '/api/flashcard-sets',
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    data: JSON.stringify(setData),
                    headers: {
                        'Authorization': 'Bearer ' + token
                    },
                    success: function(response) {
                        // Redirect to edit page with token to add flashcards
                        if (typeof navigateWithToken === 'function') {
                            navigateWithToken('/FlashcardsView/Edit/' + response.id);
                        } else {
                            // Fallback: append token as query parameter
                            window.location.href = '/FlashcardsView/Edit/' + response.id + '?token=' + encodeURIComponent(token);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Error status:', status);
                        console.error('Error details:', xhr.responseText);
                        console.error('Status code:', xhr.status);
                        console.error('Status text:', xhr.statusText);
                        
                        // Try to parse response JSON if available
                        try {
                            const responseData = JSON.parse(xhr.responseText);
                            console.error('Parsed response:', responseData);
                            alert('Set oluştururken hata: ' + (responseData.message || responseData.title || 'API Error'));
                        } catch (e) {
                            alert('Set oluştururken hata: Bilinmeyen hata. HTTP Status: ' + xhr.status);
                        }
                    }
                });
            });
              $('#testAuthBtn').click(function() {
                // Test authentication button clicked
                const token = localStorage.getItem('token');
                
                if (!token) {
                    alert('Kullanıcı doğrulaması için oturum açmanız gerekiyor.');
                    return;
                }
                
                // Make a test API call to check authentication
                $.ajax({
                    url: '/api/flashcard-sets/test-auth',
                    type: 'GET',
                    headers: {
                        'Authorization': 'Bearer ' + token
                    },
                    success: function(response) {
                        console.log('Auth test response:', response);
                        alert('Kullanıcı doğrulaması başarılı! User ID: ' + response.userId);
                    },
                    error: function(xhr, status, error) {
                        console.error('Auth test error:', error);
                        console.error('Error details:', xhr.responseText);
                        try {
                            const responseData = JSON.parse(xhr.responseText);
                            console.log('Error response:', responseData);
                        } catch (e) {}
                        alert('Kullanıcı doğrulaması başarısız. Lütfen oturum açın veya token\'ı kontrol edin.');
                    }
                    });
            });
        });
    </script>
    <script src="~/js/create-page-handler.js"></script>
}
