@{
    ViewData["Title"] = "User Sets Debug";
}

<div class="container mt-5">
    <h1>User Sets & Authentication Debug</h1>
    
    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h2>Current User Information</h2>
        </div>
        <div class="card-body">
            <div id="currentUserInfo">Loading user information...</div>
        </div>
    </div>
    
    <div class="card mb-4">
        <div class="card-header bg-info text-white">
            <h2>Available Users</h2>
        </div>
        <div class="card-body">
            <div id="usersList">Loading users...</div>
        </div>
    </div>
    
    <div class="card mb-4">
        <div class="card-header bg-success text-white">
            <h2>Flashcard Sets by User</h2>
        </div>
        <div class="card-body">
            <div class="mb-3">
                <label for="userSelect" class="form-label">Select User:</label>
                <select id="userSelect" class="form-select">
                    <option value="">Loading users...</option>
                </select>
            </div>
            <div id="userSets">Select a user to see their sets</div>
        </div>
    </div>
    
    <div class="card mb-4">
        <div class="card-header bg-warning text-dark">
            <h2>Token Data</h2>
        </div>
        <div class="card-body">
            <button id="refreshToken" class="btn btn-warning mb-3">Refresh Token Data</button>
            <div id="tokenData">Loading token data...</div>
        </div>
    </div>
    
    <div class="card mb-4">
        <div class="card-header bg-danger text-white">
            <h2>Manual Authentication Fix</h2>
        </div>
        <div class="card-body">
            <p>If you're logged in as a different user than the one whose sets are showing, try this:</p>
            <div class="mb-3">
                <button id="fixUserAuthentication" class="btn btn-danger">Fix User Authentication</button>
            </div>
            <div id="fixResult" class="mt-3"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Load all data
            getCurrentUser();
            getAllUsers();
            getTokenData();
            
            // Setup event listeners
            document.getElementById('refreshToken').addEventListener('click', getTokenData);
            document.getElementById('userSelect').addEventListener('change', function() {
                const userId = this.value;
                if (userId) {
                    getUserSets(userId);
                } else {
                    document.getElementById('userSets').innerHTML = 'Select a user to see their sets';
                }
            });
            document.getElementById('fixUserAuthentication').addEventListener('click', fixUserAuthentication);
        });
        
        function getCurrentUser() {
            fetch('/api/UserDiagnostics/current-user')
                .then(response => response.json())
                .then(data => {
                    let html = '';
                    
                    if (data.authenticated) {
                        html = `
                            <div class="alert alert-success">
                                <h4>Authenticated as: ${data.username}</h4>
                                <p><strong>User ID:</strong> ${data.userId}</p>
                                <p><strong>Email:</strong> ${data.email}</p>
                                <p><strong>Role:</strong> ${data.role || 'Not specified'}</p>
                            </div>
                            <h5>Claims:</h5>
                            <pre>${JSON.stringify(data.allClaims, null, 2)}</pre>
                        `;
                    } else {
                        html = `
                            <div class="alert alert-warning">
                                <h4>Not authenticated</h4>
                                <p>You are not logged in.</p>
                            </div>
                        `;
                    }
                    
                    document.getElementById('currentUserInfo').innerHTML = html;
                })
                .catch(error => {
                    document.getElementById('currentUserInfo').innerHTML = `
                        <div class="alert alert-danger">
                            <h4>Error</h4>
                            <p>${error.message}</p>
                        </div>
                    `;
                });
        }
        
        function getAllUsers() {
            fetch('/api/UserDiagnostics/users')
                .then(response => response.json())
                .then(users => {
                    // Populate users list
                    let html = '<div class="table-responsive"><table class="table table-striped">';
                    html += '<thead><tr><th>ID</th><th>Username</th><th>Email</th><th>Admin</th></tr></thead><tbody>';
                    
                    users.forEach(user => {
                        html += `<tr>
                            <td>${user.id}</td>
                            <td>${user.username}</td>
                            <td>${user.email}</td>
                            <td>${user.isAdmin ? 'Yes' : 'No'}</td>
                        </tr>`;
                    });
                    
                    html += '</tbody></table></div>';
                    document.getElementById('usersList').innerHTML = html;
                    
                    // Populate select dropdown
                    let selectHtml = '<option value="">Select a user</option>';
                    users.forEach(user => {
                        selectHtml += `<option value="${user.id}">${user.username} (ID: ${user.id})</option>`;
                    });
                    document.getElementById('userSelect').innerHTML = selectHtml;
                })
                .catch(error => {
                    document.getElementById('usersList').innerHTML = `
                        <div class="alert alert-danger">
                            <h4>Error</h4>
                            <p>${error.message}</p>
                        </div>
                    `;
                });
        }
        
        function getUserSets(userId) {
            document.getElementById('userSets').innerHTML = 'Loading sets...';
            
            fetch(`/api/UserDiagnostics/user-sets/${userId}`)
                .then(response => response.json())
                .then(data => {
                    const user = data.user;
                    const sets = data.sets;
                    
                    let html = `<h5>Sets for ${user.username} (ID: ${user.id})</h5>`;
                    
                    if (sets.length === 0) {
                        html += '<div class="alert alert-info">This user has no flashcard sets.</div>';
                    } else {
                        html += '<div class="table-responsive"><table class="table table-striped">';
                        html += '<thead><tr><th>ID</th><th>Title</th><th>Cards</th><th>Created</th></tr></thead><tbody>';
                        
                        sets.forEach(set => {
                            html += `<tr>
                                <td>${set.id}</td>
                                <td>${set.title}</td>
                                <td>${set.flashcardCount}</td>
                                <td>${new Date(set.createdAt).toLocaleString()}</td>
                            </tr>`;
                        });
                        
                        html += '</tbody></table></div>';
                    }
                    
                    document.getElementById('userSets').innerHTML = html;
                })
                .catch(error => {
                    document.getElementById('userSets').innerHTML = `
                        <div class="alert alert-danger">
                            <h4>Error</h4>
                            <p>${error.message}</p>
                        </div>
                    `;
                });
        }
        
        function getTokenData() {
            const token = localStorage.getItem('token');
            let html = '';
            
            if (!token) {
                html = '<div class="alert alert-warning">No token found in localStorage</div>';
            } else {
                try {
                    const base64Url = token.split('.')[1];
                    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                    const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
                        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                    }).join(''));

                    const claims = JSON.parse(jsonPayload);
                    
                    html = `
                        <div class="alert alert-info">
                            <h5>Token Preview:</h5>
                            <p>${token.substring(0, 20)}...</p>
                        </div>
                        <h5>Token Claims:</h5>
                        <pre>${JSON.stringify(claims, null, 2)}</pre>
                    `;
                    
                    // Check for user ID mismatch
                    if (claims.nameid) {
                        const tokenUserId = parseInt(claims.nameid);
                        html += `<div class="alert alert-primary">
                            <h5>Token User ID: ${tokenUserId}</h5>
                            <p>This should match the ID of the user you are logged in as.</p>
                        </div>`;
                    }
                    
                } catch (e) {
                    html = `<div class="alert alert-danger">Error parsing token: ${e.message}</div>`;
                }
            }
            
            document.getElementById('tokenData').innerHTML = html;
        }
        
        function fixUserAuthentication() {
            document.getElementById('fixResult').innerHTML = '<div class="alert alert-info">Attempting to fix authentication...</div>';
            
            // Get token data
            const token = localStorage.getItem('token');
            if (!token) {
                document.getElementById('fixResult').innerHTML = '<div class="alert alert-danger">No token found in localStorage. Please log in first.</div>';
                return;
            }
            
            try {
                // Parse token to get user ID
                const base64Url = token.split('.')[1];
                const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                }).join(''));

                const claims = JSON.parse(jsonPayload);
                
                if (!claims.nameid) {
                    document.getElementById('fixResult').innerHTML = '<div class="alert alert-danger">Token does not contain a user ID claim.</div>';
                    return;
                }
                
                // Force logout
                localStorage.removeItem('token');
                document.cookie = 'jwt=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
                document.cookie = 'user_id=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
                
                document.getElementById('fixResult').innerHTML = `
                    <div class="alert alert-success">
                        <h5>Authentication reset successful</h5>
                        <p>You have been logged out. Please log in again with the correct account.</p>
                        <a href="/AuthView/Login" class="btn btn-primary mt-2">Go to Login</a>
                    </div>
                `;
                
                setTimeout(() => {
                    window.location.href = '/AuthView/Login';
                }, 2000);
                
            } catch (e) {
                document.getElementById('fixResult').innerHTML = `<div class="alert alert-danger">Error: ${e.message}</div>`;
            }
        }
    </script>
}
